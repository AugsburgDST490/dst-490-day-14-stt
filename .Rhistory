library(shiny); runApp('day14-shiny-example1.R')
runApp('day14-shiny-example2.R')
R.version
RStudio.Version()
library(shiny); runApp('day14-shiny-example1.R')
runApp('day14-shiny-example2.R')
#| context: setup
#| echo: false
#| message: false
library(tidyverse)
library(sf)     # R wrapper around GDAL/OGR
library(leaflet)    # for fortifying shapefiles
library(shiny)
zips <- st_read(dsn = "Zip_Codes/", layer = "Zip_Codes")
# Create your own listing of zip codes
unique_zips <- zips$NAME_TXT |> unique()
# Define a function for the different colors in each zip
zip_pal <-colorFactor(palette = "RdYlBu",
domain = zips$NAME_TXT
)
three_digit_zips <- tibble( zips_all = unique_zips,
three_digit_zip = str_extract(unique_zips,pattern="^.{3}") )
# now join
zips2 <- zips |>
inner_join(three_digit_zips,by=c("NAME_TXT"="zips_all"))
### now let's roll up!
zips3 <- zips2 |>
st_make_valid() |>
group_by(three_digit_zip) |>
summarize()
# Define a function for the different colors in each five digit zip
zip_pal <-colorFactor(palette = "RdYlBu",
domain = unique_zips
)
# Define a function for the different colors in each three digit zip
zip3_pal <-colorFactor(palette = "RdYlBu",
domain = three_digit_zips$three_digit_zip
)
#| context: server
# Reproject the zips data frame
zips_reproj <- zips |>
st_transform('+proj=longlat +datum=WGS84')
zips3_reproj <- zips3 |>
st_transform('+proj=longlat +datum=WGS84')
# Create the map
map <- leaflet() |>
addTiles() |>
addPolygons(data = zips_reproj,
weight = 1,
color = "white",
fillColor = ~zip_pal(NAME_TXT),
fillOpacity = 0.3,
popup = ~NAME_TXT,
group = "Five digit zips") |>
addPolygons(data = zips3_reproj,
weight = 1,
color = "red",
fillColor = ~zip3_pal(three_digit_zip),
fillOpacity = 0.3,
popup = ~three_digit_zip,
group = "Three digit zips") |>
addLayersControl(
overlayGroups = c("Five digit zips", "Three digit zips"),
options = layersControlOptions(collapsed = FALSE)
)
output$plot <- renderLeaflet({
map
})
#| context: setup
#| echo: false
#| message: false
library(tidyverse)
library(sf)     # R wrapper around GDAL/OGR
library(leaflet)    # for fortifying shapefiles
library(shiny)
zips <- st_read(dsn = "Zip_Codes/", layer = "Zip_Codes")
# Create your own listing of zip codes
unique_zips <- zips$NAME_TXT |> unique()
# Define a function for the different colors in each zip
zip_pal <-colorFactor(palette = "RdYlBu",
domain = zips$NAME_TXT
)
three_digit_zips <- tibble( zips_all = unique_zips,
three_digit_zip = str_extract(unique_zips,pattern="^.{3}") )
# now join
zips2 <- zips |>
inner_join(three_digit_zips,by=c("NAME_TXT"="zips_all"))
### now let's roll up!
zips3 <- zips2 |>
st_make_valid() |>
group_by(three_digit_zip) |>
summarize()
# Define a function for the different colors in each five digit zip
zip_pal <-colorFactor(palette = "RdYlBu",
domain = unique_zips
)
# Define a function for the different colors in each three digit zip
zip3_pal <-colorFactor(palette = "RdYlBu",
domain = three_digit_zips$three_digit_zip
)
#| context: server
# Reproject the zips data frame
zips_reproj <- zips |>
st_transform('+proj=longlat +datum=WGS84')
zips3_reproj <- zips3 |>
st_transform('+proj=longlat +datum=WGS84')
# Create the map
map <- leaflet() |>
addTiles() |>
addPolygons(data = zips_reproj,
weight = 1,
color = "white",
fillColor = ~zip_pal(NAME_TXT),
fillOpacity = 0.3,
popup = ~NAME_TXT,
group = "Five digit zips") |>
addPolygons(data = zips3_reproj,
weight = 1,
color = "red",
fillColor = ~zip3_pal(three_digit_zip),
fillOpacity = 0.3,
popup = ~three_digit_zip,
group = "Three digit zips") |>
addLayersControl(
overlayGroups = c("Five digit zips", "Three digit zips"),
options = layersControlOptions(collapsed = FALSE)
)
output$plot <- renderLeaflet({
map
})
#| context: server
# Reproject the zips data frame
zips_reproj <- zips |>
st_transform('+proj=longlat +datum=WGS84')
zips3_reproj <- zips3 |>
st_transform('+proj=longlat +datum=WGS84')
# Create the map
map <- leaflet() |>
addTiles() |>
addPolygons(data = zips_reproj,
weight = 1,
color = "white",
fillColor = ~zip_pal(NAME_TXT),
fillOpacity = 0.3,
popup = ~NAME_TXT,
group = "Five digit zips") |>
addPolygons(data = zips3_reproj,
weight = 1,
color = "red",
fillColor = ~zip3_pal(three_digit_zip),
fillOpacity = 0.3,
popup = ~three_digit_zip,
group = "Three digit zips") |>
addLayersControl(
overlayGroups = c("Five digit zips", "Three digit zips"),
options = layersControlOptions(collapsed = FALSE)
)
plot <- renderLeaflet({
map
})
#| panel: fill
leafletOutput('plot')
#| context: server
# Reproject the zips data frame
zips_reproj <- zips |>
st_transform('+proj=longlat +datum=WGS84')
zips3_reproj <- zips3 |>
st_transform('+proj=longlat +datum=WGS84')
# Create the map
map <- leaflet() |>
addTiles() |>
addPolygons(data = zips_reproj,
weight = 1,
color = "white",
fillColor = ~zip_pal(NAME_TXT),
fillOpacity = 0.3,
popup = ~NAME_TXT,
group = "Five digit zips") |>
addPolygons(data = zips3_reproj,
weight = 1,
color = "red",
fillColor = ~zip3_pal(three_digit_zip),
fillOpacity = 0.3,
popup = ~three_digit_zip,
group = "Three digit zips") |>
addLayersControl(
overlayGroups = c("Five digit zips", "Three digit zips"),
options = layersControlOptions(collapsed = FALSE)
)
output$plot <- renderLeaflet({
map
})
usethis::create_from_github()
usethis::create_from_github("https://github.com/jjallaire/customer-churn-dashboard.git", destdir="..", fork=FALSE)
install.packages("usethis")
usethis::create_from_github("https://github.com/jjallaire/customer-churn-dashboard.git", destdir="..", fork=FALSE)
usethis::create_from_github("https://github.com/jjallaire/stock-explorer-dashboard.git", destdir="..", fork=FALSE)
usethis::create_from_github("https://github.com/cwickham/quakes.git", destdir="..", fork=FALSE)
library(shiny); runApp('day14-shiny-example1.R')
